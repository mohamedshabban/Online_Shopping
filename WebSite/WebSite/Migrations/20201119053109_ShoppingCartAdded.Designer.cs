// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSite.Models;

namespace WebSite.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20201119053109_ShoppingCartAdded")]
    partial class ShoppingCartAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebSite.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Clothes",
                            Description = "Clothes"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Food",
                            Description = "Food"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Electronics",
                            Description = "Electronics"
                        });
                });

            modelBuilder.Entity("WebSite.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AllergyInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AllergyInformation = "",
                            CategoryId = 1,
                            ImageThumbnailUrl = "",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/61fTX5TjAEL._UL1001_.jpg",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Jacket is the base of Winter",
                            Name = "Jacket",
                            Price = 400m,
                            ShortDescription = "Jacket"
                        },
                        new
                        {
                            ProductId = 2,
                            AllergyInformation = "",
                            CategoryId = 2,
                            ImageThumbnailUrl = "",
                            ImageUrl = "https://www.supermarketperimeter.com/ext/resources/0722-mangoes.jpg?1595428736",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Mango is the base of Fruits",
                            Name = "Mango",
                            Price = 10m,
                            ShortDescription = "Mango"
                        },
                        new
                        {
                            ProductId = 3,
                            AllergyInformation = "",
                            CategoryId = 3,
                            ImageThumbnailUrl = "",
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/619cPmKZsKL._AC_SL1500_.jpg",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Freezer is the base of Electronics",
                            Name = "Freezer",
                            Price = 1500m,
                            ShortDescription = "Freezer"
                        });
                });

            modelBuilder.Entity("WebSite.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("WebSite.Models.Product", b =>
                {
                    b.HasOne("WebSite.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebSite.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("WebSite.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebSite.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
